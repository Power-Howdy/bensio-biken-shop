<?php

namespace DoctrineProxy\__CG__\Eccube\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Payment extends \Eccube\Entity\Payment implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Eccube\\Entity\\Payment' . "\0" . 'id', '' . "\0" . 'Eccube\\Entity\\Payment' . "\0" . 'method', '' . "\0" . 'Eccube\\Entity\\Payment' . "\0" . 'charge', '' . "\0" . 'Eccube\\Entity\\Payment' . "\0" . 'rule_min', '' . "\0" . 'Eccube\\Entity\\Payment' . "\0" . 'rule_max', '' . "\0" . 'Eccube\\Entity\\Payment' . "\0" . 'rank', '' . "\0" . 'Eccube\\Entity\\Payment' . "\0" . 'fix_flg', '' . "\0" . 'Eccube\\Entity\\Payment' . "\0" . 'del_flg', '' . "\0" . 'Eccube\\Entity\\Payment' . "\0" . 'Creator', '' . "\0" . 'Eccube\\Entity\\Payment' . "\0" . 'create_date', '' . "\0" . 'Eccube\\Entity\\Payment' . "\0" . 'update_date', '' . "\0" . 'Eccube\\Entity\\Payment' . "\0" . 'payment_image', '' . "\0" . 'Eccube\\Entity\\Payment' . "\0" . 'charge_flg', '' . "\0" . 'Eccube\\Entity\\Payment' . "\0" . 'PaymentOptions');
        }

        return array('__isInitialized__', '' . "\0" . 'Eccube\\Entity\\Payment' . "\0" . 'id', '' . "\0" . 'Eccube\\Entity\\Payment' . "\0" . 'method', '' . "\0" . 'Eccube\\Entity\\Payment' . "\0" . 'charge', '' . "\0" . 'Eccube\\Entity\\Payment' . "\0" . 'rule_min', '' . "\0" . 'Eccube\\Entity\\Payment' . "\0" . 'rule_max', '' . "\0" . 'Eccube\\Entity\\Payment' . "\0" . 'rank', '' . "\0" . 'Eccube\\Entity\\Payment' . "\0" . 'fix_flg', '' . "\0" . 'Eccube\\Entity\\Payment' . "\0" . 'del_flg', '' . "\0" . 'Eccube\\Entity\\Payment' . "\0" . 'Creator', '' . "\0" . 'Eccube\\Entity\\Payment' . "\0" . 'create_date', '' . "\0" . 'Eccube\\Entity\\Payment' . "\0" . 'update_date', '' . "\0" . 'Eccube\\Entity\\Payment' . "\0" . 'payment_image', '' . "\0" . 'Eccube\\Entity\\Payment' . "\0" . 'charge_flg', '' . "\0" . 'Eccube\\Entity\\Payment' . "\0" . 'PaymentOptions');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Payment $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', array());

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setMethod($method)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMethod', array($method));

        return parent::setMethod($method);
    }

    /**
     * {@inheritDoc}
     */
    public function getMethod()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMethod', array());

        return parent::getMethod();
    }

    /**
     * {@inheritDoc}
     */
    public function setCharge($charge)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCharge', array($charge));

        return parent::setCharge($charge);
    }

    /**
     * {@inheritDoc}
     */
    public function getCharge()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCharge', array());

        return parent::getCharge();
    }

    /**
     * {@inheritDoc}
     */
    public function setRuleMax($ruleMax)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRuleMax', array($ruleMax));

        return parent::setRuleMax($ruleMax);
    }

    /**
     * {@inheritDoc}
     */
    public function getRuleMax()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRuleMax', array());

        return parent::getRuleMax();
    }

    /**
     * {@inheritDoc}
     */
    public function setRank($rank)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRank', array($rank));

        return parent::setRank($rank);
    }

    /**
     * {@inheritDoc}
     */
    public function getRank()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRank', array());

        return parent::getRank();
    }

    /**
     * {@inheritDoc}
     */
    public function setFixFlg($fixFlg)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFixFlg', array($fixFlg));

        return parent::setFixFlg($fixFlg);
    }

    /**
     * {@inheritDoc}
     */
    public function getFixFlg()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFixFlg', array());

        return parent::getFixFlg();
    }

    /**
     * {@inheritDoc}
     */
    public function setDelFlg($delFlg)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDelFlg', array($delFlg));

        return parent::setDelFlg($delFlg);
    }

    /**
     * {@inheritDoc}
     */
    public function getDelFlg()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDelFlg', array());

        return parent::getDelFlg();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreator(\Eccube\Entity\Member $Creator)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreator', array($Creator));

        return parent::setCreator($Creator);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreator()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreator', array());

        return parent::getCreator();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreateDate($createDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreateDate', array($createDate));

        return parent::setCreateDate($createDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreateDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreateDate', array());

        return parent::getCreateDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdateDate($updateDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdateDate', array($updateDate));

        return parent::setUpdateDate($updateDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdateDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdateDate', array());

        return parent::getUpdateDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setPaymentImage($paymentImage)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPaymentImage', array($paymentImage));

        return parent::setPaymentImage($paymentImage);
    }

    /**
     * {@inheritDoc}
     */
    public function getPaymentImage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPaymentImage', array());

        return parent::getPaymentImage();
    }

    /**
     * {@inheritDoc}
     */
    public function setChargeFlg($chargeFlg)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setChargeFlg', array($chargeFlg));

        return parent::setChargeFlg($chargeFlg);
    }

    /**
     * {@inheritDoc}
     */
    public function getChargeFlg()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getChargeFlg', array());

        return parent::getChargeFlg();
    }

    /**
     * {@inheritDoc}
     */
    public function setRuleMin($ruleMin)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRuleMin', array($ruleMin));

        return parent::setRuleMin($ruleMin);
    }

    /**
     * {@inheritDoc}
     */
    public function getRuleMin()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRuleMin', array());

        return parent::getRuleMin();
    }

    /**
     * {@inheritDoc}
     */
    public function addPaymentOption(\Eccube\Entity\PaymentOption $paymentOptions)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPaymentOption', array($paymentOptions));

        return parent::addPaymentOption($paymentOptions);
    }

    /**
     * {@inheritDoc}
     */
    public function removePaymentOption(\Eccube\Entity\PaymentOption $paymentOptions)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePaymentOption', array($paymentOptions));

        return parent::removePaymentOption($paymentOptions);
    }

    /**
     * {@inheritDoc}
     */
    public function getPaymentOptions()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPaymentOptions', array());

        return parent::getPaymentOptions();
    }

    /**
     * {@inheritDoc}
     */
    public function offsetExists($offset)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'offsetExists', array($offset));

        return parent::offsetExists($offset);
    }

    /**
     * {@inheritDoc}
     */
    public function offsetSet($offset, $value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'offsetSet', array($offset, $value));

        return parent::offsetSet($offset, $value);
    }

    /**
     * {@inheritDoc}
     */
    public function offsetGet($offset)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'offsetGet', array($offset));

        return parent::offsetGet($offset);
    }

    /**
     * {@inheritDoc}
     */
    public function offsetUnset($offset)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'offsetUnset', array($offset));

        return parent::offsetUnset($offset);
    }

    /**
     * {@inheritDoc}
     */
    public function setPropertiesFromArray(array $arrProps, array $excludeAttribute = array (
), \ReflectionClass $parentClass = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPropertiesFromArray', array($arrProps, $excludeAttribute, $parentClass));

        return parent::setPropertiesFromArray($arrProps, $excludeAttribute, $parentClass);
    }

    /**
     * {@inheritDoc}
     */
    public function toArray(array $excludeAttribute = array (
), \ReflectionClass $parentClass = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'toArray', array($excludeAttribute, $parentClass));

        return parent::toArray($excludeAttribute, $parentClass);
    }

    /**
     * {@inheritDoc}
     */
    public function copyProperties($srcObject, array $excludeAttribute = array (
))
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'copyProperties', array($srcObject, $excludeAttribute));

        return parent::copyProperties($srcObject, $excludeAttribute);
    }

}
