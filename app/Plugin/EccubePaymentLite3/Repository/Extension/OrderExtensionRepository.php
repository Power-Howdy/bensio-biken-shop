<?php

namespace Plugin\EccubePaymentLite3\Repository\Extension;

use Doctrine\ORM\EntityRepository;
use Eccube\Entity\Order;

/**
 * OrderRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class OrderExtensionRepository extends EntityRepository
{
    /** @var array */
    public $config;

    public function setConfig(array $config)
    {
        $this->config = $config;
    }


    /**
     * Get the orders, filtered by regular_order_id
     *
     * @param integer $regular_order_id
     * @return array()
     */
    public function getOrderByRegularOrderId($regular_order_id)
    {

        $qb = $this->getEntityManager()->createQueryBuilder();
        $qb
            ->select('o')
            ->from('\Eccube\Entity\Order', 'o')
            ->innerJoin('\Plugin\EccubePaymentLite3\Entity\Extension\OrderExtension', 'g', 'WITH', 'o.id = g.id')
            ->andWhere('g.regular_order_id = :regular_order_id')
            ->setParameter('regular_order_id', $regular_order_id)
            ->orderBy('o.create_date', 'ASC');

        return $qb
            ->getQuery()
            ->getResult();
    }

    /**
     * Check the order, matched order_id, trans_code
     *
     * @param array $params
     * @return bool
     */
    public function checkNotice($params) {
        $qb = $this->getEntityManager()->createQueryBuilder();
        $qb
            ->select('o')
            ->from('\Eccube\Entity\Order', 'o')
            ->innerJoin('\Plugin\EccubePaymentLite3\Entity\Extension\OrderExtension', 'g', 'WITH', 'o.id = g.id')
            ->andWhere('g.trans_code = :trans_code')
            ->setParameter('trans_code', $params['trans_code'])
            ->andWhere('o.id = :order_id')
            ->setParameter('order_id', $params['order_number']);

        $Order = $qb
            ->getQuery()
            ->getResult();

        if (empty($Order)) {
            return false;
        } else {
            return true;
        }
    }

    /**
     * Get Order
     *
     * @param array $params
     * @return Order|null
     */
    public function getOrderByParams($params)
    {
        $qb = $this->getEntityManager()->createQueryBuilder();
        $qb
            ->select('o')
            ->from('\Eccube\Entity\Order', 'o')
            ->innerJoin('\Plugin\EccubePaymentLite3\Entity\Extension\OrderExtension', 'g', 'WITH', 'o.id = g.id');

        if (isset($params['trans_code'])) {
            $qb
                ->andWhere('g.trans_code = :trans_code')
                ->setParameter('trans_code', $params['trans_code']);
        }

        if (isset($params['gmo_epsilon_order_no'])) {
            $qb
                ->andWhere('g.gmo_epsilon_order_no = :gmo_epsilon_order_no')
                ->setParameter('gmo_epsilon_order_no', $params['gmo_epsilon_order_no']);
        }

        if (isset($params['payment_method'])) {
            $qb
                ->andWhere('o.payment_method = :payment_method')
                ->setParameter('payment_method', $params['payment_method']);
        }

        $Order = $qb
            ->setMaxResults(1)
            ->getQuery()
            ->getOneOrNullResult();

        return $Order;
    }
}
